unit frm_updater;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, jpeg, ExtCtrls, URLMon, ShellApi, INIFiles, DB, ADODB;

type
  Tfrm_update = class(TForm)
    Image1: TImage;
    EPG_DB: TADOConnection;
    DDL: TADOQuery;
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_update: Tfrm_update;
  strSQL: String;

implementation

{$R *.dfm}

const
Codes64 = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/';

function Decode64(S: string): string;
var
  i: Integer;
  a: Integer;
  x: Integer;
  b: Integer;
begin
  Result := '';
  a := 0;
  b := 0;
  for i := 1 to Length(s) do
  begin
    x := Pos(s[i], codes64) - 1;
    if x >= 0 then
    begin
      b := b * 64 + x;
      a := a + 6;
      if a >= 8 then
      begin
        a := a - 8;
        x := b shr a;
        b := b mod (1 shl a);
        x := x mod 256;
        Result := Result + chr(x);
      end;
    end
    else
      Exit;
  end;
end;

function DownloadFile(SourceFile, DestFile: string): Boolean; 
begin 
  try
    Result := UrlDownloadToFile(nil, PChar(SourceFile), PChar(DestFile), 0, nil) = 0;
  except
    Result := False;
  end; 
end;

procedure RecSet(strSQL : String);
var
  database, user, pwd: string;
  Ini: TIniFile;
  conStr : string;
begin
  Ini := TIniFile.Create(ExtractFilePath(Application.EXEName) + 'epg.ini');
 frm_update.DDL.Close;
 frm_update.DDL.SQL.Clear;

    if (not frm_update.EPG_DB.Connected) then
      begin
        frm_update.EPG_DB := TADOConnection.Create(nil);
        database := Decode64(Ini.ReadString('Config', 'database', 'Default'));
        user := Decode64(Ini.ReadString('Config', 'user', 'Default'));
        pwd := Decode64(Ini.ReadString('Config', 'pwd', 'Default'));
        conStr :='Provider=MSDAORA.1;User ID='+ user +';Password='+ pwd +';Data Source='+ database +';Persist Security Info=False';
        frm_update.EPG_DB.LoginPrompt:=False;
        frm_update.EPG_DB.ConnectionString := conStr;
        frm_update.EPG_DB.Connected := True;

      end;
 frm_update.DDL.Connection := frm_update.EPG_DB;
 frm_update.DDL.SQL.Add(strSQL);
 frm_update.DDL.Open;
end;


procedure Tfrm_update.FormShow(Sender: TObject);
var
Ini: TIniFile;
DestPath, DestFile, version, conStr : string;
EPG_DB : TAdoConnection;
const
  SourceFile = 'http://192.168.110.81/EPG.exe';
begin
  DestPath := ExtractFilePath(Application.EXEName);
  DestFile := DestPath + 'EPG.exe';

strSQL := 'Select * from M_VERSION';
RecSet(strSQL);

      Ini := TIniFile.Create(ExtractFilePath(Application.EXEName) + 'epg.ini');
      try
        //Ini.WriteString('Versions', 'ver', AppVersion);
        version := Ini.ReadString('Versions', 'ver', 'Default');
        verstr := Ini.ReadString('Versions', 'verstr', 'Default');
      finally
        Ini.Free;
      end;

    if StrToInt(version) < StrToInt(frm_update.DDL.FieldValues['VERSION']) then
      begin
        showmessage('Aplikasi akan update automatis, mohon tunggu.... ');
        if DownloadFile(SourceFile, DestFile) then
          begin
            ShowMessage('Aplikasi EPG - XTI Versi '+ GetAppVersion +' berhasil diperbaharui dengan versi '+ dm.DDL.FieldValues['VERSTR']);
            Application.Terminate;
            ShellExecute(Application.Handle, PChar('open'), PChar(DestFile),
            PChar(''), nil, SW_NORMAL)
          end
        else
        ShowMessage('Error while downloading ' + SourceFile)

      end;
end;

end.
